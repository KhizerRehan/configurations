Index: src/app/core/services/permission-evaluator.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PermissionEvaluatorService {\n  private accessControlRules: any;\n\n  constructor() {\n    const sampleRules = '[\\n' +\n      '    {\\n' +\n      '        \"path\": \"/profiles/profile[id=\\'oauth-dev\\'][type=\\'as:oauth-service\\']\",\\n' +\n      '        \"accessOperations\": [\\n' +\n      '            \"create\",\\n' +\n      '            \"read\",\\n' +\n      '            \"update\",\\n' +\n      '            \"execute\"\\n' +\n      '        ],\\n' +\n      '        \"action\": \"permit\"\\n' +\n      '    },\\n' +\n      '    {\\n' +\n      '        \"path\": \"/profiles/profile/settings/as:authorization-server/client-capabilities\",\\n' +\n      '        \"accessOperations\": [\\n' +\n      '            \"read\"\\n' +\n      '        ],\\n' +\n      '        \"action\": \"permit\"\\n' +\n      '    },\\n' +\n      '    {\\n' +\n      '        \"path\": \"/facilities\",\\n' +\n      '        \"accessOperations\": [\\n' +\n      '            \"create\",\\n' +\n      '            \"read\",\\n' +\n      '            \"update\",\\n' +\n      '            \"delete\",\\n' +\n      '            \"execute\"\\n' +\n      '        ],\\n' +\n      '        \"action\": \"deny\"\\n' +\n      '    }\\n' +\n      ']';\n\n    this.setAccessControlRules(JSON.parse(sampleRules));\n  }\n\n  setAccessControlRules(data: any) {\n    this.accessControlRules = data;\n  }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/core/services/permission-evaluator.service.ts	(date 1544530383000)
+++ src/app/core/services/permission-evaluator.service.ts	(date 1544601582000)
@@ -1,8 +1,17 @@
 import { Injectable } from '@angular/core';
 
+export class Node {
+  path: string;
+  namespace: string;
+  allowedOperations: Array<string>;
+  keys: Array<any>;
+  children: Array<Node>;
+}
+
 @Injectable()
 export class PermissionEvaluatorService {
   private accessControlRules: any;
+  private accessControlTree: Node;
 
   constructor() {
     const sampleRules = '[\n' +
@@ -43,4 +52,10 @@
     this.accessControlRules = data;
   }
 
+  populateTree(node: Node, path: string, namespace: string = 'base'): Node {
+    if (node.path === path && node.namespace === namespace) {
+      return node;
+    }
+  }
+
 }
Index: src/app/main.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, HostListener, OnInit } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { Constants } from './core/services/constants';\nimport { EndpointsService } from './core/services/endpoints';\nimport { FacilitiesService } from './core/services/facilities.service';\nimport { HttpApiService } from './core/services/http-api.service';\nimport { ModalService } from './core/services/modal.service';\nimport { NavigationService } from './core/services/navigation.service';\nimport { RequestBuilder } from './core/services/request.builder';\nimport { ResponseCode } from './core/services/ResponseCode';\nimport { SharedDataService } from './core/services/shared-data.service';\nimport { TransactionService } from './core/services/transaction.service';\nimport { UserService } from './core/services/user.service';\nimport {\n  AbortModal,\n  AboutModal,\n  ChangesComponent,\n  CommitModal,\n  CreateAuthenticationProfileModal,\n  CreateOAuthProfileModal,\n  CreateProfileModal,\n  CreateUserManagementProfileModal,\n  DownloadConfigModal,\n  RollbacksModalComponent,\n  ShortCutsModalComponent, ViewCertificateModalComponent\n} from './shared/components';\nimport { DownloadConfigAction } from './shared/components/modals/download-config-modal/download-config-action.enum';\nimport { DeploymentModal } from './system/components/deployments/create/deployment.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'main-app',\n  templateUrl: 'main.component.html'\n})\nexport class MainComponent implements OnInit {\n\n  result: Array<any> = [];\n  facilites: any = {};\n  tempFacilites: any = {};\n  showFacilities: boolean = false;\n  facilitiesMenuOptions: any = {};\n  currentProfileId: string;\n\n  private routeScrollPositions: { [url: string]: number }[] = [];\n\n  constructor(private sharedData: SharedDataService,\n              private transaction: TransactionService,\n              private Api: HttpApiService,\n              private router: Router,\n              private endpoints: EndpointsService,\n              private userService: UserService,\n              private facilitiesService: FacilitiesService,\n              private navigationService: NavigationService,\n              private modalService: ModalService) {\n    this.navigationService.loadPageUrls();\n    this.sharedData.profilesEvent.subscribe((profiles: Array<any>) => {\n      this.result = profiles;\n    });\n    NavigationService.setup(this.router);\n    this.router.events.pairwise().subscribe(([prevRouteEvent, currRouteEvent]) => {\n      if (prevRouteEvent instanceof NavigationEnd && currRouteEvent instanceof NavigationStart) {\n        this.routeScrollPositions[prevRouteEvent.url] = window.pageYOffset;\n      }\n      if (currRouteEvent instanceof NavigationEnd) {\n        window.scrollTo(0, this.routeScrollPositions[currRouteEvent.url] || 0);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.sharedData.getProfileObservable().subscribe(profile => {\n      setTimeout(() => {\n        this.currentProfileId = this.router.url.indexOf('profile') > -1 ? profile.id : '';\n      }, 10);\n    });\n\n    this.loadProfiles();\n    this.registerOnFocusListener();\n    this.closeLoginWindowListener();\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  keyboardShortcuts(event) {\n    // Don't do anything if user is typing in fields\n    const inputs = ['input', 'select', 'textarea'];\n    if (document.activeElement && inputs.includes(document.activeElement.tagName.toLowerCase())) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    // Shortcuts\n    const keyCodes = ['70', '79', '67', '83', '80', '85', '191', '78', '72', '86'];\n\n    // Close modal if any of the shortcuts is used\n    if (keyCodes.indexOf(event.keyCode.toString()) > -1) {\n      ShortCutsModalComponent.close();\n    }\n\n    if (event.keyCode === 70) {\n      // Facilities = f key\n      this.onFacilitiesBtnClick();\n    }\n    else if (event.shiftKey && event.keyCode === 191) {\n      // Shortcuts modal = Shift + ?\n      ShortCutsModalComponent.open();\n    }\n    else if (event.keyCode === 67 && this.changeCount > 0) {\n      // Commit = c\n      this.confirmDeploy();\n    }\n    else if (event.keyCode === 72) {\n      // History = h\n      this.rollback();\n    }\n    else if (event.keyCode === 79) {\n      // Overview = o\n      this.router.navigateByUrl('/');\n    }\n    else if (event.keyCode === 83) {\n      // New Server = s\n      DeploymentModal.open('Create new Server', this.endpoints.getDeploymentsUrl(), true);\n    }\n    else if (event.keyCode === 78) {\n      // New Profile = n\n      CreateProfileModal.open();\n    }\n    else if (event.keyCode === 80 && this.changeCount > 0) {\n      // Pending Changes = p\n      this.showChanges();\n    }\n    else if (event.keyCode === 85) {\n      // Manage users = u\n      this.router.navigateByUrl('/users');\n    }\n    else if (event.keyCode === 86 && this.changeCount > 0) {\n      // Validation = v\n      this.validateTransaction();\n    }\n  }\n\n  registerOnFocusListener() {\n    window.addEventListener('focus', () => {\n      this.Api.postRequest(RequestBuilder.withGetUser())\n        .subscribe(response => {\n        });\n    });\n  }\n\n  loadProfiles() {\n    this.transaction.loadProfiles(this.endpoints.getProfilesUrl(), true)\n      .then((response: Array<any>) => {\n        this.result = response;\n      });\n  }\n\n  navigateToProfile(profile: any, routePath) {\n    NavigationService.forceNavigate(this.router, routePath + '/' + profile.id);\n  }\n\n  get changeCount(): number {\n    return this.sharedData.getChangeCount();\n  }\n\n  validateTransaction() {\n    this.transaction.validate();\n  }\n\n  abortTransaction() {\n    this.transaction.abort(\"loadFacilitiesDropdownData\", this);\n    CommitModal.clearComment();\n  }\n\n  confirmDeploy() {\n    CommitModal.open(\"Deploy Changes\", \"This will deploy your changes to your environment.\");\n  }\n\n  validate() {\n    if (this.sharedData.getChangeCount() > 0) {\n      this.transaction.validate();\n    }\n  }\n\n  abort() {\n    if (this.sharedData.getChangeCount() > 0) {\n      AbortModal.open(\"Cancel Changes\", \"This will discard all your changes, are you sure?\");\n    }\n  }\n\n  confirmed(value) {\n    if (value == 0) {\n\n    }\n    else if (value == 1) {\n      this.transaction.validate();\n    }\n    else if (value == 2) {\n      this.abortTransaction();\n    }\n  }\n\n  loadFacilitiesDropdownData() {\n    this.facilites = this.facilitiesService.getFacilitiesDropdownData();\n    this.tempFacilites = this.facilites;\n  }\n\n  search(value) {\n    this.facilites = this.facilitiesService.search(value);\n  }\n\n  createFacilities(type: string, selectedValue: any = null) {\n    this.facilitiesService.createFacilities(type, selectedValue, null, null,true);\n    this.hideFacilities();\n  }\n\n  deleteFacility(type: string, selectedValue: string) {\n    this.facilitiesService.deleteFacility(type, selectedValue);\n    this.hideFacilities();\n  }\n\n  editFacilities(type: string, selectedValue: any) {\n    this.facilitiesService.editFacilities(type, selectedValue);\n    this.hideFacilities();\n  }\n\n  onFacilityCreated(data) {\n    if (data.reload) {\n      NavigationService.forceNavigate(this.router, this.router.url);\n    }\n  }\n\n  hideFacilities(){\n    if (this.showFacilities) {\n      this.showFacilities = false;\n      this.modalService.removeOpenedModal('FacilitiesMenu');\n      this.resetFacilitiesSearch();\n    }\n  }\n\n  resetFacilitiesSearch(){\n    this.tempFacilites.searchValue = \"\";\n    this.search(\"\");\n  }\n\n  getCryptoKeysLength() {\n    let length = 0;\n    length += this.facilites.serverSSLKeys ? this.facilites.serverSSLKeys.length : 0;\n    length += this.facilites.clientSSLKeys ? this.facilites.clientSSLKeys.length : 0;\n    length += this.facilites.serverTrustStores ? this.facilites.serverTrustStores.length : 0;\n    length += this.facilites.clientTrustStores ? this.facilites.clientTrustStores.length : 0;\n    length += this.facilites.signingKeys ? this.facilites.signingKeys.length : 0;\n    length += this.facilites.signatureVerificiationKeys ? this.facilites.signatureVerificiationKeys.length : 0;\n    length += this.facilites.encryptionKeys ? this.facilites.encryptionKeys.length : 0;\n    length += this.facilites.decryptionKeys ? this.facilites.decryptionKeys.length : 0;\n    return length;\n  }\n\n  createAuthenticationProfile() {\n    CreateAuthenticationProfileModal.open({});\n  }\n\n  createOAuthProfile() {\n    CreateOAuthProfileModal.open({});\n  }\n\n  createUserManagementProfile() {\n    CreateUserManagementProfileModal.open({});\n  }\n\n  onAuthenticationProfileCreated(profileName: string) {\n    const profile = {id: profileName, type: \"auth:authentication-service\"};\n    this.result.push(profile);\n    this.navigateToProfile(profile, \"/profile/authentication\");\n  }\n\n  onOAuthProfileCreated(profileName: string) {\n    const profile = {id: profileName, type: \"as:oauth-service\"};\n    this.result.push(profile);\n    this.navigateToProfile(profile, \"/profile/oauth\");\n  }\n\n  onUserManagementProfileCreated(profileName: string) {\n    const profile = {id: profileName, type: \"um:user-management-service\"};\n    this.result.push(profile);\n    this.navigateToProfile(profile, \"/profile/user-management\");\n  }\n\n  rollback(){\n    RollbacksModalComponent.open();\n  }\n\n  showChanges() {\n    ChangesComponent.open();\n  }\n\n  onAbout() {\n    AboutModal.open();\n  }\n\n  onShortCuts() {\n    ShortCutsModalComponent.open();\n  }\n\n  closeLoginWindowListener() {\n    window.addEventListener(\"message\", function(event: any) {\n      let origin = event.origin || event.originalEvent.origin;\n      if(origin == Constants.ORIGIN()) {\n        if(event.data.closeWindow) {\n          TransactionService.clearTransactions();\n          NavigationService.closeLoginWindow();\n        }\n      }\n    });\n  }\n\n  opendocs() {\n    let btt = <HTMLAnchorElement>document.getElementById('open-docs');\n\n    if (btt) {\n      let win = (window as any);\n\n      if (!win.popups)\n        win.popups = {};\n\n      if (win.popups[btt.target])\n        win.popups[btt.target].close();\n\n      win.popups[btt.target] = window.open(btt.getAttribute(\"data-href\"), btt.target);\n    }\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n  onFacilitiesBtnClick() {\n    if (this.showFacilities) {\n      this.hideFacilities();\n    }\n    else {\n      this.showFacilities = true;\n      this.loadFacilitiesDropdownData();\n      this.modalService.addOpenedModal('FacilitiesMenu', this, 'hideFacilities');\n    }\n  }\n\n  onOffClick() {\n    this.hideFacilities();\n  }\n\n  downloadConfig() {\n    if (this.transaction.isReadOnlyMode) {\n      this.downloadLastSavedConfiguration();\n    }\n    else {\n      this.transaction.getWriteTransaction()\n        .then(transactionId => {\n          this.Api.postRequest(RequestBuilder.withChanges(transactionId))\n            .subscribe(response => {\n              if (response.code === ResponseCode.OK) {\n                if (response.data.changes.children) {\n                  DownloadConfigModal.open();\n                }\n                else {\n                  this.downloadLastSavedConfiguration();\n                }\n              }\n            });\n        })\n        .catch(error => {});\n    }\n  }\n\n  viewCertificate(id: string, type: string) {\n    ViewCertificateModalComponent.open(id, type);\n  }\n\n  onDownloadConfigModalClosed(action: DownloadConfigAction) {\n    if (action === DownloadConfigAction.DOWNLOAD_CURRENT) {\n      this.downloadCurrentUnsavedConfiguration();\n    }\n    else if (action === DownloadConfigAction.DOWNLOAD_LAST_SAVED) {\n      this.downloadLastSavedConfiguration();\n    }\n  }\n\n  private downloadLastSavedConfiguration() {\n    this.Api.postRequest(RequestBuilder.withStartTransaction())\n      .subscribe(response => {\n        if (response.code === ResponseCode.OK) {\n          const transactionId = response.data.transactionId;\n          this.Api.postRequest(RequestBuilder.withGetXmlConfiguration(transactionId, '/'))\n            .subscribe(response => {\n              if (response.code === ResponseCode.OK) {\n                this.sharedData.downloadXmlFile(response.data.xml);\n              }\n            },\n              error => console.log(error));\n        }\n      },\n        error => console.log(error));\n  }\n\n  private downloadCurrentUnsavedConfiguration() {\n    this.transaction.getReadTransaction()\n      .then(transactionId => {\n        this.Api.postRequest(RequestBuilder.withGetXmlConfiguration(transactionId, '/'))\n          .subscribe(response => {\n            if (response.code === ResponseCode.OK) {\n              this.sharedData.downloadXmlFile(response.data.xml);\n            }\n          },\n            error => console.log(error));\n      });\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/main.component.ts	(date 1544530383000)
+++ src/app/main.component.ts	(date 1544530038000)
@@ -6,6 +6,7 @@
 import { HttpApiService } from './core/services/http-api.service';
 import { ModalService } from './core/services/modal.service';
 import { NavigationService } from './core/services/navigation.service';
+import { PermissionEvaluatorService } from './core/services/permission-evaluator.service';
 import { RequestBuilder } from './core/services/request.builder';
 import { ResponseCode } from './core/services/ResponseCode';
 import { SharedDataService } from './core/services/shared-data.service';
@@ -51,7 +52,8 @@
               private userService: UserService,
               private facilitiesService: FacilitiesService,
               private navigationService: NavigationService,
-              private modalService: ModalService) {
+              private modalService: ModalService,
+              private permissionEvaluatorService: PermissionEvaluatorService) {
     this.navigationService.loadPageUrls();
     this.sharedData.profilesEvent.subscribe((profiles: Array<any>) => {
       this.result = profiles;
