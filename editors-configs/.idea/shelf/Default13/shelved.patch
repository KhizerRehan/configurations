Index: src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><app-modal [isHidden]=\"isHidden\"\n           [title]=\"isCreated ? 'Update ' + data?.result?.id.value + ' Claims Mapper' : 'New Claims Mapper'\"\n           [customCssClasses]=\"['view-modal']\"\n           [toolbarIconClass]=\"'ion-ios-toggle-outline'\"\n           (close)=\"closeModal()\">\n  <ng-template #appSpinner>\n    <app-spinner [isActive]=\"isBusyCounter > 0\"></app-spinner>\n  </ng-template>\n  <ng-template #content>\n  </ng-template>\n\n</app-modal>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.html	(date 1547552480000)
+++ src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.html	(date 1547552638000)
@@ -7,6 +7,27 @@
     <app-spinner [isActive]="isBusyCounter > 0"></app-spinner>
   </ng-template>
   <ng-template #content>
+    <div class="main-form" align="left" *ngIf="!isCreated">
+      <form ngNativeValidate name="createClaimForm" id="createClaimForm" (submit)="createNewMapper()">
+        <div class="">
+          <label>Name</label>
+          <input [(ngModel)]="newMapperData.name.value"
+                 type="text"
+                 name="mapperName"
+                 focusElement
+                 class="field col-12"
+                 [ngClass]="{'error' : newMapperData.name.hasError}"
+                 required>
+        </div>
+        <div class="col col-12 mt2">
+          <element-error [error]="errorMessage"></element-error>
+        </div>
+        <div class="col col-12 mt2">
+          <button appReadOnlyMode type="submit" class="button button-success button-small">Create</button>
+          <button type="reset" class="button button-light-grey button-small" (click)="closeModal()">Cancel</button>
+        </div>
+      </form>
+    </div>
   </ng-template>
 
 </app-modal>
Index: src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { ConfigService } from '../../../../core/services/config.service';\nimport { DataResolverService } from '../../../../core/services/data-resolver.service';\nimport { EndpointsService } from '../../../../core/services/endpoints';\nimport { HttpApiService } from '../../../../core/services/http-api.service';\nimport { ModalService } from '../../../../core/services/modal.service';\nimport { SharedDataService } from '../../../../core/services/shared-data.service';\nimport { TransactionService } from '../../../../core/services/transaction.service';\n\n@Component({\n  selector: 'app-edit-mapper-modal',\n  templateUrl: './edit-mapper-modal.component.html'\n})\nexport class EditMapperModalComponent implements OnInit, OnDestroy {\n  readonly destroyed$ = new Subject();\n\n  data: any;\n  url: string;\n  errorMessage: any;\n  isCreated: boolean;\n  isHidden: boolean = true;\n  isBusyCounter = 0;\n\n  constructor(private Api: HttpApiService,\n              private Transaction: TransactionService,\n              private endpoints: EndpointsService,\n              private sharedData: SharedDataService,\n              private configService: ConfigService,\n              private dataResolver: DataResolverService,\n              private modalService: ModalService) {\n  }\n\n  ngOnInit() {\n    this.url = this.endpoints.getClaimsMapperUrl();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n\n  openModal(data?: any) {\n    this.data = data || {};\n    this.isCreated = this.data && this.data.id;\n    this.isBusyCounter = 0;\n    if (this.data.result) {\n      if (this.data.values) {\n      }\n    }\n    else if (this.isCreated) {\n      // this.loadData();\n    }\n    this.isHidden = false;\n    this.modalService.addOpenedModal('EditClaimsMapperModal', this, 'closeModal');\n    SharedDataService.lockScroll();\n  }\n\n  closeModal() {\n    this.isHidden = true;\n    this.modalService.removeOpenedModal('EditClaimsMapperModal');\n    SharedDataService.unlockScroll();\n  }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.ts	(date 1547552480000)
+++ src/app/oauth/components/claims-mappers/edit-mapper-modal/edit-mapper-modal.component.ts	(date 1547553110000)
@@ -1,10 +1,12 @@
-import { Component, OnDestroy, OnInit } from '@angular/core';
+import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';
 import { Subject } from 'rxjs/Subject';
 import { ConfigService } from '../../../../core/services/config.service';
 import { DataResolverService } from '../../../../core/services/data-resolver.service';
 import { EndpointsService } from '../../../../core/services/endpoints';
 import { HttpApiService } from '../../../../core/services/http-api.service';
 import { ModalService } from '../../../../core/services/modal.service';
+import { RequestBuilder } from '../../../../core/services/request.builder';
+import { ResponseCode } from '../../../../core/services/ResponseCode';
 import { SharedDataService } from '../../../../core/services/shared-data.service';
 import { TransactionService } from '../../../../core/services/transaction.service';
 
@@ -15,7 +17,10 @@
 export class EditMapperModalComponent implements OnInit, OnDestroy {
   readonly destroyed$ = new Subject();
 
+  @Output() created: EventEmitter<any> = new EventEmitter();
+
   data: any;
+  newMapperData: any = {};
   url: string;
   errorMessage: any;
   isCreated: boolean;
@@ -43,6 +48,7 @@
   openModal(data?: any) {
     this.data = data || {};
     this.isCreated = this.data && this.data.id;
+    this.resetData();
     this.isBusyCounter = 0;
     if (this.data.result) {
       if (this.data.values) {
@@ -62,4 +68,47 @@
     SharedDataService.unlockScroll();
   }
 
+  resetData() {
+    this.newMapperData.name = {};
+    this.errorMessage = null;
+  }
+
+  createNewMapper() {
+    this.errorMessage = null;
+    this.newMapperData.name.hasError = false;
+    this.newMapperData.name.value = this.newMapperData.name.value ? this.newMapperData.name.value.trim() : '';
+    if (!this.newMapperData.name.value) {
+      this.newMapperData.name.hasError = true;
+    }
+    else {
+      this.Transaction.getWriteTransaction()
+        .then(transactionId => {
+          this.isBusyCounter++;
+          const path = `${this.url}{${this.newMapperData.name.value}}`;
+          this.Api.postRequest(RequestBuilder.withCreate(path, transactionId))
+            .takeUntil(this.destroyed$)
+            .finally(() => this.isBusyCounter--)
+            .subscribe(response => {
+                if (response.code !== ResponseCode.OK) {
+                  this.newMapperData.name.hasError = true;
+                  this.errorMessage = response;
+                }
+                else {
+                  this.sharedData.incrementChangeCount(path);
+                  this.data = {
+                    id: this.newMapperData.name.value,
+                    path: path,
+                    values: {}
+                  };
+                  this.created.emit(this.data);
+                  this.isCreated = true;
+                  // this.loadData();
+                }
+              },
+              error => console.log(error));
+        })
+        .catch(error => {
+        });
+    }
+  }
 }
