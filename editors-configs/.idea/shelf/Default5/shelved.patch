Index: src/app/authentication/components/apps/new-app/app.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ConfigService } from '../../../../core/services/config.service';\nimport { DataResolverService } from '../../../../core/services/data-resolver.service';\nimport { ElementHandlerService } from '../../../../core/services/element-handler.service';\nimport { EndpointsService } from '../../../../core/services/endpoints';\nimport { HttpApiService } from '../../../../core/services/http-api.service';\nimport { RequestBuilder } from '../../../../core/services/request.builder';\nimport { ResponseCode } from '../../../../core/services/ResponseCode';\nimport { SharedDataService } from '../../../../core/services/shared-data.service';\nimport { TransactionService } from '../../../../core/services/transaction.service';\n\n@Component({\n  moduleId: module.id,\n  selector: \"auth-apps\",\n  templateUrl: 'app.component.html'\n})\nexport class AuthAppComponent implements OnInit, OnDestroy {\n\n  result: Array<any> = [];\n  url: string;\n  appName: string = \"\";\n  isAppCreated: boolean = false;\n  hasError: boolean = false;\n  description: any = null;\n  elementsBusy$: Subscription;\n  isBusyCounter: number = 0;\n  panelOptions: any = {};\n  private paramKey: string = \"auth-app\";\n\n  ngOnInit(): any {\n    this.elementsBusy$ = this.sharedService.getElementsBusy()\n      .distinctUntilChanged()\n      .delay(0)\n      .subscribe(isBusy => {\n        if (isBusy) {\n          this.isBusyCounter++;\n        }\n        else {\n          this.isBusyCounter--;\n        }\n      });\n    this.url = this.endpoints.getAuthAppsUrl();\n    this.appName = this.sharedService.getSelectedParam(this.paramKey);\n    if(this.appName && this.appName.length > 0) {\n      this.url = this.url + \"{\" + this.appName + \"}/\";\n      this.isAppCreated = true;\n      this.loadAppData();\n    }\n    else {\n      this.router.navigateByUrl('/profile/authentication/service-providers');\n    }\n  }\n\n  constructor(private Api: HttpApiService,\n              private Transaction: TransactionService,\n              private endpoints: EndpointsService,\n              private dataResolver: DataResolverService,\n              private sharedService: SharedDataService,\n              private configService: ConfigService,\n              private elementHandler: ElementHandlerService,\n              private router: Router) {\n\n  }\n\n  ngOnDestroy() {\n    this.sharedService.resetElementsBusyCounter();\n    this.isBusyCounter = 0;\n    this.elementsBusy$.unsubscribe();\n  }\n\n  loadAppData() {\n    this.isBusyCounter++;\n    this.configService.getAuthAppConfig().subscribe(config => {\n        this.Transaction.getReadTransaction()\n          .then(transaction => {\n            this.sharedService.getDescription(this, this.url, transaction);\n            Observable.forkJoin(\n              this.Api.postRequest(RequestBuilder.withGetValues(this.url, transaction, true)),\n              this.Api.postRequest(RequestBuilder.withGetEnvironment())\n            )\n              .finally(() => this.isBusyCounter--)\n              .subscribe(responses => {\n                  if (responses[0].code === ResponseCode.OK) {\n                    const parsedResponse = this.dataResolver.parseResponse(responses[0].data.value, config);\n                    parsedResponse['template-area'].items = responses[1].data.templateAreas || [];\n                    this.result = parsedResponse;\n                    this.elementHandler.markFields(this.result);\n                  }\n                  else {\n                    this.sharedService.setSelectedParam(this.paramKey, null);\n                    this.router.navigateByUrl('/profile/authentication/service-providers');\n                  }\n                },\n                error => console.log(error));\n          });\n      },\n      error => console.log(error));\n  }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/authentication/components/apps/new-app/app.component.ts	(date 1539870862000)
+++ src/app/authentication/components/apps/new-app/app.component.ts	(date 1539870664000)
@@ -1,5 +1,5 @@
 import { Component, OnDestroy, OnInit } from '@angular/core';
-import { Router } from '@angular/router';
+import { ActivatedRoute, Router } from '@angular/router';
 import { Observable } from 'rxjs/Observable';
 import { Subscription } from 'rxjs/Subscription';
 import { ConfigService } from '../../../../core/services/config.service';
@@ -43,15 +43,12 @@
         }
       });
     this.url = this.endpoints.getAuthAppsUrl();
-    this.appName = this.sharedService.getSelectedParam(this.paramKey);
-    if(this.appName && this.appName.length > 0) {
+    this.route.params.subscribe(params => {
+      this.appName = params['id'];
       this.url = this.url + "{" + this.appName + "}/";
       this.isAppCreated = true;
       this.loadAppData();
-    }
-    else {
-      this.router.navigateByUrl('/profile/authentication/service-providers');
-    }
+    });
   }
 
   constructor(private Api: HttpApiService,
@@ -61,7 +58,8 @@
               private sharedService: SharedDataService,
               private configService: ConfigService,
               private elementHandler: ElementHandlerService,
-              private router: Router) {
+              private router: Router,
+              private route: ActivatedRoute) {
 
   }
 
Index: src/app/authentication/authentication.routing.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AccountDomainsComponent,\n  AuthAppComponent,\n  AuthAppsComponent,\n  AuthComponent,\n  AuthEndpointsComponent,\n  AuthenticationActionsComponent,\n  AuthenticationComponent,\n  AuthenticationSideMenuComponent,\n  AuthFilterComponent,\n  AuthFiltersComponent,\n  AuthListingComponent,\n  AuthProtocolComponent,\n  AuthProtocolsComponent\n} from './components';\n\nexport const authenticationRouting: ModuleWithProviders = RouterModule.forChild([\n  {\n    path: 'profile/authentication', component: AuthenticationSideMenuComponent,\n    children: [\n      {path: \"\", component: AuthenticationComponent},\n      {path: \"account-domains\", component: AccountDomainsComponent},\n      {path: \"service-providers\", component: AuthAppsComponent},\n      {path: \"service-providers/create\", component: AuthAppComponent, data: {classes: ['client-edit']}},\n      {path: \"protocols\", component: AuthProtocolsComponent},\n      {path: \"protocols/create\", component: AuthProtocolComponent},\n      {path: \"endpoints\", component: AuthEndpointsComponent},\n      {path: \"authenticators\", component: AuthListingComponent},\n      {path: \"authenticators/create\", component: AuthComponent},\n      {path: \"filters\", component: AuthFiltersComponent},\n      {path: \"filters/create\", component: AuthFilterComponent},\n      {path: \"actions\", component: AuthenticationActionsComponent}\n    ]\n  }\n]);\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/authentication/authentication.routing.ts	(date 1539870862000)
+++ src/app/authentication/authentication.routing.ts	(date 1539861889000)
@@ -23,14 +23,14 @@
       {path: "", component: AuthenticationComponent},
       {path: "account-domains", component: AccountDomainsComponent},
       {path: "service-providers", component: AuthAppsComponent},
-      {path: "service-providers/create", component: AuthAppComponent, data: {classes: ['client-edit']}},
+      {path: "service-providers/:id", component: AuthAppComponent, data: {classes: ['client-edit']}},
       {path: "protocols", component: AuthProtocolsComponent},
-      {path: "protocols/create", component: AuthProtocolComponent},
+      {path: "protocols/:id", component: AuthProtocolComponent},
       {path: "endpoints", component: AuthEndpointsComponent},
       {path: "authenticators", component: AuthListingComponent},
-      {path: "authenticators/create", component: AuthComponent},
+      {path: "authenticators/:id", component: AuthComponent},
       {path: "filters", component: AuthFiltersComponent},
-      {path: "filters/create", component: AuthFilterComponent},
+      {path: "filters/:id", component: AuthFilterComponent},
       {path: "actions", component: AuthenticationActionsComponent}
     ]
   }
